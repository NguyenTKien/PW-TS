trigger:
  - main

pool: Default

variables:
  - group: UserAccount
  - API_URL: https://automationintesting.online/api

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "18"
    displayName: "Install Node.js"

  - script: npm ci
    displayName: "npm ci"
  - script: npx playwright install --with-deps
    displayName: "Install Playwright browsers"

  - script: |
      echo "User: $(EMAIL)"
      echo "Password: $(PASSWORD)"
      echo "api_url: ${API_URL}"
      echo "storage_state_admin: ${storage_state_admin}"
    displayName: "Display variables"
    env:
      CI: "true"
      EMAIL: $(EMAIL) # Set email as an environment variable
      PASSWORD: $(PASSWORD) # Set password as an environment variable (Azure DevOps will mask it)
      BASE_API_URL: ${API_URL}
      STORAGE_STATE_ADMIN_FILE: ${storage_state_admin}
      STORAGE_STATE_FILE: ${storage_state}

  - script: npm run test:e2e
    displayName: "Run Playwright tests"

  - task: PublishTestResults@2
    displayName: "Publish test results"
    inputs:
      searchFolder: "test-results"
      testResultsFormat: "JUnit"
      testResultsFiles: "junit-results.xml"
      mergeTestResults: true
      failTaskOnFailedTests: true
      testRunTitle: "End-To-End Booking Room Project"
    condition: succeededOrFailed()
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: playwright-report
      artifact: playwright-report
      publishLocation: "pipeline"
    condition: succeededOrFailed()
